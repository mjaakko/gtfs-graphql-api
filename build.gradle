import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'xyz.malkki'
version = '1.0-SNAPSHOT'

var mainClassName = "xyz.malkki.gtfsapi.GtfsApiApplicationKt"

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/mjaakko/gtfs-library")
        credentials {
            username = project.findProperty("gpr.user") as String ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") as String ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "com.github.ben-manes.caffeine:caffeine:3.1.8"

    implementation 'io.github.oshai:kotlin-logging-jvm:5.1.0'

    implementation "org.mobilitydata:gtfs-realtime-bindings:0.0.8"
    implementation "xyz.malkki:gtfs-library:0.2.2"

    implementation "com.eatthepath:jvptree:0.3.0"
}

jib {
    container {
        mainClass = mainClassName
    }
    from {
        platforms {
            platform {
                architecture = "amd64"
                os = "linux"
            }
            platform {
                architecture = "arm64"
                os = "linux"
            }
        }
    }
    to {
        image = "mjaakko/gtfs-graphql-api:edge"
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        freeCompilerArgs += '-opt-in=kotlin.time.ExperimentalTime'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

